package graphic.ihm.dialog.ingamemenu;

import graphic.ihm.dialog.PBDialog;
import graphic.ihm.dialog.chargeplay.charge.ListSavedPlayInGame;
import graphic.ihm.dialog.chargeplay.save.ListSavedPlaySaveGame;
import graphic.ihm.frame.embedded.FrameGameEmbedded;

import java.awt.Dimension;

import javax.swing.JOptionPane;

import org.newdawn.slick.SlickException;
import org.newdawn.slick.util.Log;

import util.constantes.Constantes;
import util.resolver.MessageResolver;

/**
 * Version 1.0, March 2013
 *
 * Copyright (C) 2012 Collonge Florian
 * Dijon France
 * Everyone is permitted to copy and distribute verbatim copies
 * of this license document, but changing it is not allowed.
*/

/**
 *
 * @author fcollonge
 */
public class DialInGameMenu extends PBDialog {

    /**
	 * 
	 */
	private static final long serialVersionUID = 6349328853354633626L;
	
	private FrameGameEmbedded parent;
	
    /**
     * Creates new form DialInGameMenu
     * @param mainFrame 
     */
    public DialInGameMenu(FrameGameEmbedded parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void initComponents() {
    	
    	MessageResolver msgRes = new MessageResolver();
        jPanel1 = new javax.swing.JPanel();
        options = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        save = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        charge = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        quit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(4, 1));

        options.setText(msgRes.getValueFromCode("dial.in.game.menu.options"));
        options.setMinimumSize(Constantes.SIZE_BUTTONS);
        options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(options)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(options)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        save.setText(msgRes.getValueFromCode("dial.in.game.menu.save"));
        save.setMinimumSize(Constantes.SIZE_BUTTONS);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(save)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(save)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);

        charge.setText(msgRes.getValueFromCode("dial.in.game.menu.charge"));
        charge.setMinimumSize(Constantes.SIZE_BUTTONS);
        charge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(charge)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(charge)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3);

        quit.setText(msgRes.getValueFromCode("dial.in.game.menu.quit"));
        quit.setMinimumSize(Constantes.SIZE_BUTTONS);
        quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(quit)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(quit)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        
        getContentPane().add(jPanel4);

        pack();
    }                      

    private void optionsActionPerformed(java.awt.event.ActionEvent evt) {                                        
    	//TODO faire la fenetre des options
    	JOptionPane.showMessageDialog(null, "Patience, cela arrivera bientôt !", 
    		      "Info", JOptionPane.INFORMATION_MESSAGE);
    }                                       

    /**
     * Sauvegarde la partie en cours
     * 
     * @param evt
     */
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {                                     
    		ListSavedPlaySaveGame saveGame = new ListSavedPlaySaveGame(this, false);
    		Dimension tailleEcran = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
    		saveGame.setLocation((int)(tailleEcran.getWidth()/2 - saveGame.getWidth()/2), (int)(tailleEcran.getHeight()/2 - saveGame.getHeight()/2));
    		saveGame.setVisible(true);
    }                                    

    /**
     * Charge une partie sauvegardee
     * 
     * @param evt
     */
    private void chargeActionPerformed(java.awt.event.ActionEvent evt) {                                       
    	ListSavedPlayInGame savedPlay = new ListSavedPlayInGame(this, false);
		Dimension tailleEcran = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		savedPlay.setLocation((int)(tailleEcran.getWidth()/2 - savedPlay.getWidth()/2), (int)(tailleEcran.getHeight()/2 - savedPlay.getHeight()/2));
		savedPlay.setVisible(true);
    }                                      

    /**
     * Quitte le jeu
     * 
     * @param evt
     */
    private void quitActionPerformed(java.awt.event.ActionEvent evt) {   
    	parent.getGameContainer().dispose();
    	parent.setVisible(false);
    	parent.dispose();
    	this.setVisible(false);
    	dispose();
        System.exit(0);
    }           
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialInGameMenu dialog = null;
				try {
					dialog = new DialInGameMenu(new FrameGameEmbedded(null), true);
				} catch (SlickException e) {
					Log.error(e.getMessage());
				}
                dialog.setVisible(true);
            }
        });
    }

	/**
	 * @return the parent
	 */
	public FrameGameEmbedded getParent() {
		return parent;
	}

	/**
	 * @param parent the parent to set
	 */
	public void setParent(FrameGameEmbedded parent) {
		this.parent = parent;
	}

	private javax.swing.JButton charge;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton options;
    private javax.swing.JButton quit;
    private javax.swing.JButton save;
}
